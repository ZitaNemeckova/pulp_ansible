{"swagger": "2.0", "info": {"title": "Pulp 3 API", "logo": {"url": "https://pulp.plan.io/attachments/download/517478/pulp_logo_word_rectangle.svg"}, "version": "v3"}, "host": "localhost:24817", "schemes": ["http"], "basePath": "/", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Basic": {"type": "basic"}}, "security": [{"Basic": []}], "paths": {"/ansible/collections/": {"post": {"operationId": "upload_collection", "summary": "Upload a collection", "description": "Create an artifact and trigger an asynchronous task to create Collection content from it.", "parameters": [{"name": "file", "in": "formData", "description": "The Collection tarball.", "required": true, "type": "file"}, {"name": "sha256", "in": "formData", "description": "An optional sha256 checksum of the uploaded file.", "required": false, "type": "string", "minLength": 1}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["ansible: collections"]}, "parameters": []}, "/pulp/api/v3/content/ansible/collections/": {"get": {"operationId": "content_ansible_collections_list", "summary": "List collection versions", "description": "ViewSet for Ansible Collection.", "parameters": [{"name": "namespace", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "version", "in": "query", "description": "Filter results where version matches value", "required": false, "type": "string"}, {"name": "q", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "is_highest", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/CollectionVersion"}}}}}}, "tags": ["content: collections"]}, "post": {"operationId": "content_ansible_collections_create", "summary": "Create a collection version", "description": "ViewSet for Ansible Collection.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CollectionVersion"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/CollectionVersion"}}}, "tags": ["content: collections"]}, "parameters": []}, "{collection_version_href}": {"get": {"operationId": "pulp_ansible_galaxy_api_v2_collections_read", "description": "Get the detail view of a Collection.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/GalaxyCollectionVersion"}}}, "tags": ["pulp_ansible: galaxy api collections"]}, "parameters": [{"name": "collection_version_href", "in": "path", "description": "URI of Collection Version. e.g.: /pulp_ansible/galaxy/1/api/v2/collections/1/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/content/ansible/roles/": {"get": {"operationId": "content_ansible_roles_list", "summary": "List roles", "description": "ViewSet for Role.", "parameters": [{"name": "name", "in": "query", "description": "Filter results where name matches value", "required": false, "type": "string"}, {"name": "namespace", "in": "query", "description": "Filter results where namespace matches value", "required": false, "type": "string"}, {"name": "version", "in": "query", "description": "Filter results where version matches value", "required": false, "type": "string"}, {"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Role"}}}}}}, "tags": ["content: roles"]}, "post": {"operationId": "content_ansible_roles_create", "summary": "Create a role", "description": "ViewSet for Role.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Role"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Role"}}}, "tags": ["content: roles"]}, "parameters": []}, "{role_href}": {"get": {"operationId": "content_ansible_roles_read", "summary": "Inspect a role", "description": "ViewSet for Role.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Role"}}}, "tags": ["content: roles"]}, "parameters": [{"name": "role_href", "in": "path", "description": "URI of Role. e.g.: /pulp/api/v3/content/ansible/roles/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/distributions/ansible/ansible/": {"get": {"operationId": "distributions_ansible_ansible_list", "summary": "List ansible distributions", "description": "ViewSet for Ansible Distributions.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "base_path", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "base_path__contains", "in": "query", "description": "Filter results where base_path contains value", "required": false, "type": "string"}, {"name": "base_path__icontains", "in": "query", "description": "Filter results where base_path contains value", "required": false, "type": "string"}, {"name": "base_path__in", "in": "query", "description": "Filter results where base_path is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/AnsibleDistribution"}}}}}}, "tags": ["distributions: ansible"]}, "post": {"operationId": "distributions_ansible_ansible_create", "summary": "Create an ansible distribution", "description": "Trigger an asynchronous create task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AnsibleDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: ansible"]}, "parameters": []}, "{ansible_distribution_href}": {"get": {"operationId": "distributions_ansible_ansible_read", "summary": "Inspect an ansible distribution", "description": "ViewSet for Ansible Distributions.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AnsibleDistribution"}}}, "tags": ["distributions: ansible"]}, "put": {"operationId": "distributions_ansible_ansible_update", "summary": "Update an ansible distribution", "description": "Trigger an asynchronous update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AnsibleDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: ansible"]}, "patch": {"operationId": "distributions_ansible_ansible_partial_update", "summary": "Partially update an ansible distribution", "description": "Trigger an asynchronous partial update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AnsibleDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: ansible"]}, "delete": {"operationId": "distributions_ansible_ansible_delete", "summary": "Delete an ansible distribution", "description": "Trigger an asynchronous delete task", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: ansible"]}, "parameters": [{"name": "ansible_distribution_href", "in": "path", "description": "URI of Ansible Distribution. e.g.: /pulp/api/v3/distributions/ansible/ansible/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/pulp_ansible/tags/": {"get": {"operationId": "pulp_ansible_tags_list", "summary": "List tags", "description": "ViewSet for Tag models.", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Tag"}}}}}}, "tags": ["pulp_ansible: tags"]}, "parameters": []}, "/pulp/api/v3/remotes/ansible/ansible/": {"get": {"operationId": "remotes_ansible_ansible_list", "summary": "List ansible remotes", "description": "ViewSet for Ansible Remotes.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "_last_updated__lt", "in": "query", "description": "Filter results where _last_updated is less than value", "required": false, "type": "string"}, {"name": "_last_updated__lte", "in": "query", "description": "Filter results where _last_updated is less than or equal to value", "required": false, "type": "string"}, {"name": "_last_updated__gt", "in": "query", "description": "Filter results where _last_updated is greater than value", "required": false, "type": "string"}, {"name": "_last_updated__gte", "in": "query", "description": "Filter results where _last_updated is greater than or equal to value", "required": false, "type": "string"}, {"name": "_last_updated__range", "in": "query", "description": "Filter results where _last_updated is between two comma separated values", "required": false, "type": "string"}, {"name": "_last_updated", "in": "query", "description": "ISO 8601 formatted dates are supported", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/AnsibleRemote"}}}}}}, "tags": ["remotes: ansible"]}, "post": {"operationId": "remotes_ansible_ansible_create", "summary": "Create an ansible remote", "description": "ViewSet for Ansible Remotes.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AnsibleRemote"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/AnsibleRemote"}}}, "tags": ["remotes: ansible"]}, "parameters": []}, "{ansible_remote_href}": {"get": {"operationId": "remotes_ansible_ansible_read", "summary": "Inspect an ansible remote", "description": "ViewSet for Ansible Remotes.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AnsibleRemote"}}}, "tags": ["remotes: ansible"]}, "put": {"operationId": "remotes_ansible_ansible_update", "summary": "Update an ansible remote", "description": "Trigger an asynchronous update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AnsibleRemote"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: ansible"]}, "patch": {"operationId": "remotes_ansible_ansible_partial_update", "summary": "Partially update an ansible remote", "description": "Trigger an asynchronous partial update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AnsibleRemote"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: ansible"]}, "delete": {"operationId": "remotes_ansible_ansible_delete", "summary": "Delete an ansible remote", "description": "Trigger an asynchronous delete task", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: ansible"]}, "parameters": [{"name": "ansible_remote_href", "in": "path", "description": "URI of Ansible Remote. e.g.: /pulp/api/v3/remotes/ansible/ansible/1/", "required": true, "type": "string"}]}, "{ansible_remote_href}sync/": {"post": {"operationId": "remotes_ansible_ansible_sync", "description": "Trigger an asynchronous task to sync Ansible content.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RepositorySyncURL"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: ansible"]}, "parameters": [{"name": "ansible_remote_href", "in": "path", "description": "URI of Ansible Remote. e.g.: /pulp/api/v3/remotes/ansible/ansible/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/remotes/ansible/collection/": {"get": {"operationId": "remotes_ansible_collection_list", "summary": "List collection remotes", "description": "ViewSet for Collection Remotes.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "_last_updated__lt", "in": "query", "description": "Filter results where _last_updated is less than value", "required": false, "type": "string"}, {"name": "_last_updated__lte", "in": "query", "description": "Filter results where _last_updated is less than or equal to value", "required": false, "type": "string"}, {"name": "_last_updated__gt", "in": "query", "description": "Filter results where _last_updated is greater than value", "required": false, "type": "string"}, {"name": "_last_updated__gte", "in": "query", "description": "Filter results where _last_updated is greater than or equal to value", "required": false, "type": "string"}, {"name": "_last_updated__range", "in": "query", "description": "Filter results where _last_updated is between two comma separated values", "required": false, "type": "string"}, {"name": "_last_updated", "in": "query", "description": "ISO 8601 formatted dates are supported", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/CollectionRemote"}}}}}}, "tags": ["remotes: collection"]}, "post": {"operationId": "remotes_ansible_collection_create", "summary": "Create a collection remote", "description": "ViewSet for Collection Remotes.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CollectionRemote"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/CollectionRemote"}}}, "tags": ["remotes: collection"]}, "parameters": []}, "{collection_remote_href}": {"get": {"operationId": "remotes_ansible_collection_read", "summary": "Inspect a collection remote", "description": "ViewSet for Collection Remotes.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CollectionRemote"}}}, "tags": ["remotes: collection"]}, "put": {"operationId": "remotes_ansible_collection_update", "summary": "Update a collection remote", "description": "Trigger an asynchronous update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CollectionRemote"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: collection"]}, "patch": {"operationId": "remotes_ansible_collection_partial_update", "summary": "Partially update a collection remote", "description": "Trigger an asynchronous partial update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CollectionRemote"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: collection"]}, "delete": {"operationId": "remotes_ansible_collection_delete", "summary": "Delete a collection remote", "description": "Trigger an asynchronous delete task", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: collection"]}, "parameters": [{"name": "collection_remote_href", "in": "path", "description": "URI of Collection Remote. e.g.: /pulp/api/v3/remotes/ansible/collection/1/", "required": true, "type": "string"}]}, "{collection_remote_href}sync/": {"post": {"operationId": "remotes_ansible_collection_sync", "description": "Trigger an asynchronous task to sync Collection content.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RepositorySyncURL"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: collection"]}, "parameters": [{"name": "collection_remote_href", "in": "path", "description": "URI of Collection Remote. e.g.: /pulp/api/v3/remotes/ansible/collection/1/", "required": true, "type": "string"}]}, "/pulp_ansible/galaxy/{path}/api/": {"get": {"operationId": "pulp_ansible_galaxy_api_list", "description": "Return a response to the \"GET\" action.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["pulp_ansible: api"]}, "parameters": [{"name": "path", "in": "path", "required": true, "type": "string"}]}, "/pulp_ansible/galaxy/{path}/api/v1/roles/": {"get": {"operationId": "pulp_ansible_galaxy_api_v1_roles_list", "description": "APIView for Roles.", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/GalaxyRole"}}}}}}, "tags": ["pulp_ansible: galaxy api roles"]}, "parameters": [{"name": "path", "in": "path", "required": true, "type": "string"}]}, "/pulp_ansible/galaxy/{path}/api/v1/roles/{role_pk}/versions/": {"get": {"operationId": "pulp_ansible_galaxy_api_v1_roles_versions_list", "description": "APIView for Role Versions.", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/GalaxyRoleVersion"}}}}}}, "tags": ["pulp_ansible: galaxy api v1 versions"]}, "parameters": [{"name": "path", "in": "path", "required": true, "type": "string"}, {"name": "role_pk", "in": "path", "required": true, "type": "string"}]}, "/pulp_ansible/galaxy/{path}/api/v2/collections/": {"post": {"operationId": "pulp_ansible_galaxy_api_v2_collections_create", "description": "Queues a task that creates a new Collection from an uploaded artifact.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["pulp_ansible: galaxy api collections"]}, "parameters": [{"name": "path", "in": "path", "required": true, "type": "string"}]}, "{collection_version_href}versions/": {"get": {"operationId": "pulp_ansible_galaxy_api_v2_collections_versions_list", "description": "APIView for Collections by namespace/name.", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/GalaxyCollectionVersion"}}}}}}, "tags": ["pulp_ansible: galaxy api v2 versions"]}, "parameters": [{"name": "collection_version_href", "in": "path", "description": "URI of Collection Version. e.g.: /pulp_ansible/galaxy/1/api/v2/collections/1/1/", "required": true, "type": "string"}]}, "/pulp_ansible/galaxy/{path}/api/v3/collections/": {"get": {"operationId": "pulp_ansible_galaxy_api_v3_collections_list", "description": "ViewSet for Collections.", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": ""}}, "tags": ["pulp_ansible: galaxy api collections"]}, "post": {"operationId": "pulp_ansible_galaxy_api_v3_collections_create", "summary": "Upload a collection", "description": "Create an artifact and trigger an asynchronous task to create Collection content from it.", "parameters": [{"name": "file", "in": "formData", "description": "The Collection tarball.", "required": true, "type": "file"}, {"name": "sha256", "in": "formData", "description": "An optional sha256 checksum of the uploaded file.", "required": false, "type": "string", "minLength": 1}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["pulp_ansible: galaxy api collections"]}, "parameters": [{"name": "path", "in": "path", "required": true, "type": "string"}]}}, "definitions": {"AsyncOperationResponse": {"required": ["task"], "type": "object", "properties": {"task": {"title": "Task", "description": "The href of the task.", "type": "string", "format": "uri"}}}, "TagNested": {"type": "object", "properties": {"name": {"title": "Name", "description": "The name of the Tag.", "type": "string", "readOnly": true, "minLength": 1}}}, "CollectionVersion": {"required": ["_artifact", "authors", "contents", "dependencies", "description", "docs_blob", "documentation", "homepage", "issues", "license", "name", "namespace", "repository", "version"], "type": "object", "properties": {"_created": {"title": " created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "_href": {"title": " href", "type": "string", "format": "uri", "readOnly": true}, "_type": {"title": " type", "type": "string", "readOnly": true, "minLength": 1}, "_artifact": {"title": " artifact", "description": "Artifact file representing the physical content", "type": "string", "format": "uri"}, "md5": {"title": "Md5", "description": "The MD5 checksum if available.", "type": "string", "readOnly": true, "minLength": 1}, "sha1": {"title": "Sha1", "description": "The SHA-1 checksum if available.", "type": "string", "readOnly": true, "minLength": 1}, "sha224": {"title": "Sha224", "description": "The SHA-224 checksum if available.", "type": "string", "readOnly": true, "minLength": 1}, "sha256": {"title": "Sha256", "description": "The SHA-256 checksum if available.", "type": "string", "readOnly": true, "minLength": 1}, "sha384": {"title": "Sha384", "description": "The SHA-384 checksum if available.", "type": "string", "readOnly": true, "minLength": 1}, "sha512": {"title": "Sha512", "description": "The SHA-512 checksum if available.", "type": "string", "readOnly": true, "minLength": 1}, "authors": {"description": "A list of the CollectionVersion content's authors.", "type": "array", "items": {"type": "string", "maxLength": 64, "minLength": 1}}, "contents": {"title": "Contents", "description": "A JSON field with data about the contents.", "type": "string"}, "dependencies": {"title": "Dependencies", "description": "A dict declaring Collections that this collection requires to be installed for it to be usable.", "type": "string"}, "description": {"title": "Description", "description": "A short summary description of the collection.", "type": "string"}, "docs_blob": {"title": "Docs blob", "description": "A JSON field holding the various documentation blobs in the collection.", "type": "string"}, "documentation": {"title": "Documentation", "description": "The URL to any online docs.", "type": "string", "format": "uri", "maxLength": 128}, "homepage": {"title": "Homepage", "description": "The URL to the homepage of the collection/project.", "type": "string", "format": "uri", "maxLength": 128}, "issues": {"title": "Issues", "description": "The URL to the collection issue tracker.", "type": "string", "format": "uri", "maxLength": 128}, "license": {"description": "A list of licenses for content inside of a collection.", "type": "array", "items": {"type": "string", "maxLength": 32, "minLength": 1}}, "name": {"title": "Name", "description": "The name of the collection.", "type": "string", "maxLength": 32, "minLength": 1}, "namespace": {"title": "Namespace", "description": "The namespace of the collection.", "type": "string", "maxLength": 32, "minLength": 1}, "repository": {"title": "Repository", "description": "The URL of the originating SCM repository.", "type": "string", "format": "uri", "maxLength": 128}, "tags": {"type": "array", "items": {"$ref": "#/definitions/TagNested"}, "readOnly": true}, "version": {"title": "Version", "description": "The version of the collection.", "type": "string", "maxLength": 32, "minLength": 1}}}, "Role": {"required": ["_artifact", "version", "name", "namespace"], "type": "object", "properties": {"_created": {"title": " created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "_href": {"title": " href", "type": "string", "format": "uri", "readOnly": true}, "_type": {"title": " type", "type": "string", "readOnly": true, "minLength": 1}, "_artifact": {"title": " artifact", "description": "Artifact file representing the physical content", "type": "string", "format": "uri"}, "version": {"title": "Version", "type": "string", "minLength": 1}, "name": {"title": "Name", "type": "string", "minLength": 1}, "namespace": {"title": "Namespace", "type": "string", "minLength": 1}}}, "AnsibleDistribution": {"required": ["base_path", "name"], "type": "object", "properties": {"_href": {"title": " href", "type": "string", "format": "uri", "readOnly": true}, "_created": {"title": " created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "base_path": {"title": "Base path", "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")", "type": "string", "maxLength": 255, "minLength": 1}, "content_guard": {"title": "Content guard", "description": "An optional content-guard.", "type": "string", "format": "uri", "x-nullable": true}, "name": {"title": "Name", "description": "A unique name. Ex, `rawhide` and `stable`.", "type": "string", "maxLength": 255, "minLength": 1}, "repository": {"title": "Repository", "description": "The latest RepositoryVersion for this Repository will be served.", "type": "string", "format": "uri", "x-nullable": true}, "repository_version": {"title": "Repository version", "description": "RepositoryVersion to be served", "type": "string", "format": "uri", "x-nullable": true}, "mazer_url": {"title": "Mazer url", "description": "The URL of a mazer content source.", "type": "string", "readOnly": true}}}, "Tag": {"type": "object", "properties": {"name": {"title": "Name", "type": "string", "readOnly": true, "minLength": 1}}}, "AnsibleRemote": {"required": ["name", "url"], "type": "object", "properties": {"_href": {"title": " href", "type": "string", "format": "uri", "readOnly": true}, "_created": {"title": " created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "_type": {"title": " type", "type": "string", "readOnly": true, "minLength": 1}, "name": {"title": "Name", "description": "A unique name for this remote.", "type": "string", "minLength": 1}, "url": {"title": "Url", "description": "The URL of an external content source.", "type": "string", "minLength": 1}, "ssl_ca_certificate": {"title": "Ssl ca certificate", "description": "A string containing the PEM encoded CA certificate used to validate the server certificate presented by the remote server. All new line characters must be escaped. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "ssl_client_certificate": {"title": "Ssl client certificate", "description": "A string containing the PEM encoded client certificate used for authentication. All new line characters must be escaped. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "ssl_client_key": {"title": "Ssl client key", "description": "A PEM encoded private key used for authentication. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "ssl_validation": {"title": "Ssl validation", "description": "If True, SSL peer validation must be performed.", "type": "boolean"}, "proxy_url": {"title": "Proxy url", "description": "The proxy URL. Format: scheme://user:password@host:port", "type": "string", "minLength": 1, "x-nullable": true}, "username": {"title": "Username", "description": "The username to be used for authentication when syncing.", "type": "string", "minLength": 1, "x-nullable": true}, "password": {"title": "Password", "description": "The password to be used for authentication when syncing.", "type": "string", "minLength": 1, "x-nullable": true}, "_last_updated": {"title": " last updated", "description": "Timestamp of the most recent update of the remote.", "type": "string", "format": "date-time", "readOnly": true}, "download_concurrency": {"title": "Download concurrency", "description": "Total number of simultaneous connections.", "type": "integer", "minimum": 1}, "policy": {"title": "Policy", "description": "The policy to use when downloading content.", "type": "string", "enum": ["immediate", "When syncing, download all metadata and content now."], "default": "immediate"}}}, "RepositorySyncURL": {"required": ["repository"], "type": "object", "properties": {"repository": {"title": "Repository", "description": "A URI of the repository to be synchronized.", "type": "string", "format": "uri"}, "mirror": {"title": "Mirror", "description": "If ``True``, synchronization will remove all content that is not present in the remote repository. If ``False``, sync will be additive only.", "type": "boolean", "default": false}}}, "CollectionRemote": {"required": ["name", "url"], "type": "object", "properties": {"_href": {"title": " href", "type": "string", "format": "uri", "readOnly": true}, "_created": {"title": " created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "_type": {"title": " type", "type": "string", "readOnly": true, "minLength": 1}, "name": {"title": "Name", "description": "A unique name for this remote.", "type": "string", "minLength": 1}, "url": {"title": "Url", "description": "The URL of an external content source.", "type": "string", "minLength": 1}, "ssl_ca_certificate": {"title": "Ssl ca certificate", "description": "A string containing the PEM encoded CA certificate used to validate the server certificate presented by the remote server. All new line characters must be escaped. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "ssl_client_certificate": {"title": "Ssl client certificate", "description": "A string containing the PEM encoded client certificate used for authentication. All new line characters must be escaped. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "ssl_client_key": {"title": "Ssl client key", "description": "A PEM encoded private key used for authentication. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "ssl_validation": {"title": "Ssl validation", "description": "If True, SSL peer validation must be performed.", "type": "boolean"}, "proxy_url": {"title": "Proxy url", "description": "The proxy URL. Format: scheme://user:password@host:port", "type": "string", "minLength": 1, "x-nullable": true}, "username": {"title": "Username", "description": "The username to be used for authentication when syncing.", "type": "string", "minLength": 1, "x-nullable": true}, "password": {"title": "Password", "description": "The password to be used for authentication when syncing.", "type": "string", "minLength": 1, "x-nullable": true}, "_last_updated": {"title": " last updated", "description": "Timestamp of the most recent update of the remote.", "type": "string", "format": "date-time", "readOnly": true}, "download_concurrency": {"title": "Download concurrency", "description": "Total number of simultaneous connections.", "type": "integer", "minimum": 1}, "policy": {"title": "Policy", "description": "The policy to use when downloading content.", "type": "string", "enum": ["immediate", "When syncing, download all metadata and content now."], "default": "immediate"}, "requirements_file": {"title": "Requirements file", "description": "The string version of Collection requirements yaml.", "type": "string", "minLength": 1, "x-nullable": true}}}, "GalaxyRole": {"required": ["name", "namespace"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "readOnly": true}, "name": {"title": "Name", "type": "string", "minLength": 1}, "namespace": {"title": "Namespace", "type": "string", "minLength": 1}}}, "GalaxyRoleVersion": {"required": ["name"], "type": "object", "properties": {"name": {"title": "Name", "type": "string", "minLength": 1}, "source": {"title": "Source", "type": "string", "readOnly": true}}}, "GalaxyCollectionVersion": {"required": ["name", "namespace", "version"], "type": "object", "properties": {"name": {"title": "Name", "type": "string", "minLength": 1}, "namespace": {"title": "Namespace", "type": "string", "minLength": 1}, "version": {"title": "Version", "type": "string", "minLength": 1}, "href": {"title": "Href", "type": "string", "readOnly": true}, "versions_url": {"title": "Versions url", "type": "string", "readOnly": true}}}}, "tags": [{"name": "ansible: collections", "x-displayName": "Ansible: Collections"}, {"name": "content: collections", "x-displayName": "Content: Collections"}, {"name": "content: roles", "x-displayName": "Content: Roles"}, {"name": "distributions: ansible", "x-displayName": "Distributions: Ansible"}, {"name": "pulp_ansible: tags", "x-displayName": "Pulp_Ansible: Tags"}, {"name": "remotes: ansible", "x-displayName": "Remotes: Ansible"}, {"name": "remotes: collection", "x-displayName": "Remotes: Collection"}, {"name": "pulp_ansible: api", "x-displayName": "Pulp_Ansible: Api"}, {"name": "pulp_ansible: galaxy api roles", "x-displayName": "Pulp_Ansible: Galaxy Api Roles"}, {"name": "pulp_ansible: galaxy api v1 versions", "x-displayName": "Pulp_Ansible: Galaxy Api V1 Versions"}, {"name": "pulp_ansible: galaxy api collections", "x-displayName": "Pulp_Ansible: Galaxy Api Collections"}, {"name": "pulp_ansible: galaxy api v2 versions", "x-displayName": "Pulp_Ansible: Galaxy Api V2 Versions"}, {"name": "pulp_ansible: galaxy api v3 versions", "x-displayName": "Pulp_Ansible: Galaxy Api V3 Versions"}, {"name": "pulp_ansible: galaxy api v3 collections certified", "x-displayName": "Pulp_Ansible: Galaxy Api V3 Collections Certified"}]}